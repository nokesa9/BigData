# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: List current directory
        run: ls
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.12'
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - name: Install Flake8
        run: pip install flake8
      
      - name: Run Flake8
        run: |
            autopep8 --in-place --aggressive --aggressive test_data.py lambda.py extract_data.py
            flake8 --exclude=env
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1
      - name: List buckets
        run: aws s3 ls
      - name: subir archivos
        run: aws s3 cp . s3://bigdata02024/Code --recursive
 
      - name: Parcial
        run: |
          python -m venv env
          source env/bin/activate
          pip install urllib3==1.26.7
          pip install zappa
          pip freeze > requirements.txt

          flake8 extract_data.py
      - name: Pruebas Unitarias Pytest
        run: |
          pytest test_extract_data.py
          python3 -v
      - name: Despliegue de funciones con Zappa
        run: |
          source env/bin/activate
          pwd
          zappa update dev
          zappa update dev2
          zappa invoke dev lambda.f
     
