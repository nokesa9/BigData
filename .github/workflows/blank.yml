# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: List current directory
        run: ls
      - name: Deploy with Zappa
        run: |
          python -m venv env
          source env/bin/activate
          pip install urllib3==1.26.7
          pip install zappa
          pip install -r requirements.txt
          zappa update dev  # Ajusta al entorno que est√°s usando en Zappa
          zappa invoke lambda.f
      - name: Install pytest
        run: pytest

      - name: flake8
        run: flake8 --exclude=env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
                aws-region: us-east-1

      - name: bucket ls
        run: aws s3 ls

      - name: Upload files to S3
        run: |
          aws s3 cp utils.py s3://deploygit/datos/
          aws s3 cp test_utils.py s3://deploygit/datos/
      
